<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Inventory Master</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <style>
        .active {
            background: blue;
            border-radius: 20px;
            color: white;
        }

        .delete-btn,
        .edit-btn {
            border: none;
            border-radius: 5px;
            padding: 5px 10px;
            font-size: 14px;
            cursor: pointer;
        }

        .delete-btn {
            background-color: #dc3545;
            color: white;
        }

        .edit-btn {
            background-color: #007bff;
            color: white;
        }
    </style>
</head>

<body>
    <div class="container">
        <!-- Navigation -->
        <div style="padding-left: 10px; padding-top: 10px;">
            <ul class="nav">
                <li class="nav-item">
                    <a class="nav-link" href="/new-chalan">New Chalan</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/chalan-list">Chalan List</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/parti-master">Parti Master</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" href="/inventory-master">Inventory Master</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/authorize-user">Authorize User</a>
                </li>
            </ul>
        </div>

        <!-- Add Item Section -->
        <div class="d-flex align-items-center" style="max-width: 300px;">
            <input style="flex-grow: 1; border-radius: 5px; padding: 10px; font-size: 16px;" type="text"
                id="itemNameInput" class="form-control m-2" placeholder="Enter Item Name">
            <button style="width: 200px; border-radius: 5px; background-color: #007bff; color: white; font-size: 16px;"
                id="addItemButton" class="btn btn-primary m-2">
                Add Item
            </button>
        </div>

        <!-- Search and Item List -->
        <ul class="list-group p-3" id="dataList">
            <div class="mb-3">
                <input type="text" id="searchInput" class="form-control" placeholder="Search by Party Name">
            </div>
            <% data.forEach(item=> { %>
                <li class="list-group-item border p-4 d-flex justify-content-between align-items-center"
                    style="margin-top: 5px; border-radius: 10px;">
                    <span>
                        <strong>Item Name:</strong>
                        <span class="party-name">
                            <%= item.name %>
                        </span>
                    </span>
                    <div>
                        <button class="edit-btn"
                            onclick="openEditModal('<%= item._id %>', '<%= item.name %>')">Edit</button>
                        <button class="delete-btn" onclick="deleteItem('<%= item._id %>')">Delete</button>
                    </div>
                </li>
                <% }) %>
        </ul>
    </div>

    <!-- Edit Modal -->
    <div class="modal" tabindex="-1" id="editModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Item</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="text" id="editItemInput" class="form-control" placeholder="Enter new name">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="saveEditButton">Save</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>

    <script>
        let currentEditId = null;
        // const data = <%- JSON.stringify(data) %>;
        // data.forEach((ele)=>)
        // Filter items by Party Name
        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('searchInput').addEventListener('input', function () {
                const filter = this.value.toLowerCase();
                console.log(filter)
                const items = document.querySelectorAll('.list-group-item');
                items.forEach((item) => {
                    const partyName = item.querySelector('.party-name').innerHTML.toLowerCase();
                    item.style.display = partyName.includes(filter) ? '' : 'none';
                    // console.log(item)
                });
            });
        });

        // Add Item
        document.getElementById('addItemButton').addEventListener('click', async function () {
            const itemNameInput = document.getElementById('itemNameInput');
            const itemName = itemNameInput.value.trim();
            if (!itemName) {
                alert('Please enter an item name.');
                return;
            }
            try {
                const response = await fetch('/item/add', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ name: itemName })
                });
                if (response.ok) {
                    alert('Item added successfully!');
                    location.reload();
                } else alert('Failed to add item.');
            } catch (err) {
                console.error('Error:', err);
                alert('An error occurred.');
            }
        });

        // Open Edit Modal
        function openEditModal(id, name) {
            currentEditId = id;
            document.getElementById('editItemInput').value = name;
            const editModal = new bootstrap.Modal(document.getElementById('editModal'));
            editModal.show();
        }

        // Save Edit
        document.getElementById('saveEditButton').addEventListener('click', async function () {
            const newName = document.getElementById('editItemInput').value.trim();
            if (!newName) {
                alert('Please enter a new name.');
                return;
            }
            try {
                const response = await fetch(`/item/edit/${currentEditId}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ name: newName })
                });
                if (response.ok) {
                    alert('Item updated successfully!');
                    location.reload();
                } else alert('Failed to update item.');
            } catch (err) {
                console.error('Error:', err);
                alert('An error occurred.');
            }
        });

        // Delete Item
        async function deleteItem(id) {
            if (!confirm('Are you sure you want to delete this item?')) return;
            try {
                const response = await fetch(`/item/delete/${id}`, { method: 'POST' });
                if (response.ok) {
                    alert('Item deleted successfully!');
                    location.reload();
                } else alert('Failed to delete item.');
            } catch (err) {
                console.error('Error:', err);
                alert('An error occurred.');
            }
        }
    </script>
</body>

</html>